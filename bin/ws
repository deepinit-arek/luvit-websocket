#!/usr/bin/env luvit

local Utils = require('utils')
local OS = require('os')
local Crypto = require('crypto')
local W = require('websocket')
local Curl = require('curl')
local atob = require('websocket/lib/util').atob

--local url = 'ws://localhost:8080/ws'
local url = 'ws://127.0.0.1:8080/ws'

url = url:gsub('^ws', 'http')

process:on('error', function (err)
  p('CAUGHT UNHANDLED', err)
  process.exit(1)
end)

local function status_ok(status)
  return status >= 100 and status < 300
end

local version = '13'
local send = W.hybi10.send --_masked
local receive = W.hybi10.receive

local key = atob(version .. '-' .. OS.time())
local expected_key = atob(Crypto.sha1(key .. '258EAFA5-E914-47DA-95CA-C5AB0DC85B11', true))

Curl.get({
  url = url,
  proxy = false,
  parse = false,
  headers = {
    ['Connection'] = 'Upgrade',
    ['Upgrade'] = 'websocket',
    ['Sec-WebSocket-Version'] = version,
    ['Sec-WebSocket-Key'] = key,
  },
}, function (err, req)
  p('GOT', err, req)
  if err or not status_ok(req.code) or not status_ok(req.status_code) then
    p('Bad connection')
    process.exit(1)
  end
  local key = req.headers['sec-websocket-accept']
  if key ~= expected_key then
    p('Bad handshake', key, expected_key)
    process.exit(1)
  end
  --
  --req:on('data', Utils.bind(receive, req))
  req:on('data', function (data)
    p('MDDD', data)
    receive(req, data)
  end)
  req.send = send
  req:on('message', function (message)
    p('<', message)
  end)
  --
  p('Sending')
  --req:send('foo')
  p('Sent!')
end)
